openapi: 3.0.3
info:
  title: University Library API
  version: 1.0.0
  description: Çevrim içi üniversite kütüphane sistemi için REST API

servers:
  - url: https://api.library.edu.tr/v1

tags:
  - name: Books
    description: Kitap işlemleri
  - name: Students
    description: Öğrenci işlemleri
  - name: Loans
    description: Kitap ödünç alma işlemleri

paths:
  /books:
    get:
      tags: [Books]
      summary: Tüm kitapları getir
      parameters:
        - name: page
          in: query
          description: Sayfa numarası
          schema:
            type: integer
        - name: size
          in: query
          description: Sayfa başına öğe sayısı
          schema:
            type: integer
      responses:
        '200':
          description: Kitap listesi
          content:
            application/json:
              example:
                - id: "123e4567-e89b-12d3-a456-426614174000"
                  title: "1984"
                  author: "George Orwell"
                  isbn: "978-0451524935"
                  publisher: "Penguin"
                  pageCount: 328
                  stock: 10

    post:
      tags: [Books]
      summary: Yeni kitap ekle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: Başarıyla oluşturuldu
        '400':
          description: Geçersiz veri

  /books/{id}:
    get:
      tags: [Books]
      summary: Kitap bilgisi getir
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Kitap bulundu
        '404':
          description: Kitap bulunamadı

    put:
      tags: [Books]
      summary: Kitap güncelle
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Güncellendi

    delete:
      tags: [Books]
      summary: Kitap sil
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Başarıyla silindi

  /students:
    get:
      tags: [Students]
      summary: Öğrencileri getir
      responses:
        '200':
          description: Liste

    post:
      tags: [Students]
      summary: Yeni öğrenci ekle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '201':
          description: Oluşturuldu

  /students/{id}:
    get:
      tags: [Students]
      summary: Öğrenci getir
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Öğrenci bulundu

    put:
      tags: [Students]
      summary: Güncelle
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: Güncellendi

    delete:
      tags: [Students]
      summary: Sil
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Silindi

  /loans:
    get:
      tags: [Loans]
      summary: Tüm ödünçler
      responses:
        '200':
          description: Liste

    post:
      tags: [Loans]
      summary: Yeni ödünç al
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
      responses:
        '201':
          description: Oluşturuldu

  /loans/{id}:
    get:
      tags: [Loans]
      summary: Ödünç bilgisi getir
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Bilgi

  /loans/{id}/return:
    patch:
      tags: [Loans]
      summary: Kitap iade et
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: İade edildi

components:
  schemas:
    Book:
      type: object
      required: [id, title, author, isbn, publisher, pageCount, stock]
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        author:
          type: string
        isbn:
          type: string
          pattern: '^\d{3}-\d{10}$'
        publisher:
          type: string
        pageCount:
          type: integer
        stock:
          type: integer

    Student:
      type: object
      required: [id, name, studentNumber, email, isActive]
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        studentNumber:
          type: string
        email:
          type: string
          format: email
        isActive:
          type: boolean

    Loan:
      type: object
      required: [id, studentId, bookId, loanDate, status]
      properties:
        id:
          type: string
          format: uuid
        studentId:
          type: string
        bookId:
          type: string
        loanDate:
          type: string
          format: date
        returnDate:
          type: string
          format: date
          nullable: true
        status:
          type: string
          enum: [ongoing, returned, late]
